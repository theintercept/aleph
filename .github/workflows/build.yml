name: Build

on:
  push:
    paths-ignore:
      - "ui/**"
      - "docs/**"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up
        run: |
          sudo sysctl -w vm.max_map_count=262144
          sudo echo "ALEPH_SECRET=batman\n" >> aleph.env
          echo "${{ github.ref }}"
          docker --version
          docker-compose --version

      - name: Docker pull services
        run: |
          docker-compose pull --parallel --quiet elasticsearch convert-document ingest-file
          make ALEPH_TAG=${{ github.sha }} services

      - name: Build docker image
        run: docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .

      - name: Install development dependencies
        run: make dev

      - name: Check code formatting
        run: make format-check

      - name: Run linter
        run: make lint

      - name: Run aleph tests
        run: make ALEPH_TAG=${{ github.sha }} test

      - name: Push docker image (hash)
        env:
          GITHUB_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        if: env.GITHUB_PASSWORD != null
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Push docker images for tags
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        run: |
          export ALEPH_TAG=${GITHUB_REF/refs\/tags\//}
          docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${ALEPH_TAG};
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${ALEPH_TAG};
          docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest;
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest;
